%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Darwin 11.4.0 Darwin Kernel Version 11.4.0: Mon Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64.
%%Title: /Users/snikolov/projects/traffic-control/vopt.eps
%%CreationDate: 07/06/2012  22:56:54
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   156   275   456   515
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   156   275   456   515
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1872 6180 csm

    0     0  3601  2880 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 3602 2881 rf
6 w
0 2339 2791 0 0 -2339 468 2555 4 MP
PP
-2791 0 0 2339 2791 0 0 -2339 468 2555 5 MP stroke
4 w
DO
SO
6 w
0 sg
 468 2555 mt 3259 2555 L
 468  216 mt 3259  216 L
 468 2555 mt  468  216 L
3259 2555 mt 3259  216 L
 468 2555 mt 3259 2555 L
 468 2555 mt  468  216 L
 468 2555 mt  468 2527 L
 468  216 mt  468  243 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 435 2700 mt 
(0) s
1165 2555 mt 1165 2527 L
1165  216 mt 1165  243 L
1132 2700 mt 
(1) s
1863 2555 mt 1863 2527 L
1863  216 mt 1863  243 L
1830 2700 mt 
(2) s
2561 2555 mt 2561 2527 L
2561  216 mt 2561  243 L
2528 2700 mt 
(3) s
3259 2555 mt 3259 2527 L
3259  216 mt 3259  243 L
3226 2700 mt 
(4) s
 468 2555 mt  495 2555 L
3259 2555 mt 3231 2555 L
 367 2599 mt 
(0) s
 468 1970 mt  495 1970 L
3259 1970 mt 3231 1970 L
 267 2014 mt 
(0.5) s
 468 1385 mt  495 1385 L
3259 1385 mt 3231 1385 L
 367 1429 mt 
(1) s
 468  800 mt  495  800 L
3259  800 mt 3231  800 L
 267  844 mt 
(1.5) s
 468  216 mt  495  216 L
3259  216 mt 3231  216 L
 367  260 mt 
(2) s
 468 2555 mt 3259 2555 L
 468  216 mt 3259  216 L
 468 2555 mt  468  216 L
3259 2555 mt 3259  216 L
gs 468 216 2792 2340 rc
29 -3 28 -4 28 -4 28 -4 28 -5 29 -5 28 -6 28 -6 
28 -6 28 -7 29 -7 28 -8 28 -9 28 -9 28 -10 29 -11 
28 -11 28 -13 28 -13 28 -14 29 -15 28 -16 28 -17 28 -19 
28 -19 28 -21 29 -22 28 -24 28 -24 28 -26 28 -28 29 -29 
28 -31 28 -31 28 -34 28 -35 29 -36 28 -38 28 -39 28 -40 
28 -42 29 -42 28 -44 28 -44 28 -46 28 -46 29 -46 28 -47 
28 -47 28 -48 28 -47 28 -47 29 -46 28 -46 28 -46 28 -44 
28 -44 29 -43 28 -41 28 -40 28 -39 28 -38 29 -36 28 -35 
28 -34 28 -32 28 -30 29 -29 28 -28 28 -26 28 -25 28 -23 
29 -22 28 -21 28 -19 28 -19 28 -17 28 -16 29 -15 28 -14 
28 -13 28 -13 28 -11 29 -11 28 -10 28 -9 28 -9 28 -8 
29 -7 28 -7 28 -7 28 -6 28 -5 29 -5 28 -5 28 -4 
28 -4 28 -4 28 -4 468 2555 100 MP stroke
DD
29 7 28 7 28 8 28 8 28 9 29 10 28 10 28 11 
28 12 28 13 29 14 28 14 28 16 28 16 28 18 29 19 
28 20 28 21 28 22 28 24 29 25 28 26 28 28 28 28 
28 30 28 31 29 33 28 33 28 34 28 35 28 35 29 36 
28 37 28 36 28 36 28 36 29 35 28 34 28 32 28 31 
28 29 29 27 28 24 28 21 28 18 28 15 29 11 28 8 
28 4 28 0 28 -4 28 -8 29 -11 28 -15 28 -18 28 -21 
28 -24 29 -27 28 -29 28 -31 28 -32 28 -34 29 -35 28 -36 
28 -36 28 -36 28 -37 29 -36 28 -35 28 -35 28 -34 28 -33 
29 -33 28 -31 28 -30 28 -28 28 -28 28 -26 29 -25 28 -24 
28 -22 28 -21 28 -20 29 -19 28 -18 28 -16 28 -16 28 -14 
29 -14 28 -13 28 -12 28 -11 28 -10 29 -10 28 -9 28 -8 
28 -8 28 -7 28 -7 468 2472 100 MP stroke
gr

DD
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 120 FMSR

1779 2843 mt 
(D) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1852 2843 mt 
( x) s
 726  121 mt 
(Optimal Velocity Function and its derivative) s
 451 2598 mt 
( ) s
3243  258 mt 
( ) s
SO
1 sg
0 390 972 0 0 -390 564 678 4 MP
PP
-972 0 0 390 972 0 0 -390 564 678 5 MP stroke
4 w
DO
SO
6 w
0 sg
 564  678 mt 1536  678 L
 564  288 mt 1536  288 L
 564  678 mt  564  288 L
1536  678 mt 1536  288 L
 564  678 mt 1536  678 L
 564  678 mt  564  288 L
 564  678 mt 1536  678 L
 564  288 mt 1536  288 L
 564  678 mt  564  288 L
1536  678 mt 1536  288 L
1033  439 mt 
(V\() s
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 120 FMSR

1153  439 mt 
(D) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1226  439 mt 
( x\)) s
gs 564 288 973 391 rc
360 0 636 396 2 MP stroke
gr

1033  614 mt 
(V'\() s
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 120 FMSR

1179  614 mt 
(D) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1252  614 mt 
( x\)) s
gs 564 288 973 391 rc
DD
360 0 636 569 2 MP stroke
SO
gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
